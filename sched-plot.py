#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# sched-plot -- Plot a workload schedule
#
# Given a system configuration, a workload description, and a schedule as
# generated by `scorsa-sched', this program generates a plot displaying the
# amount of sockets used by each job over time, as well as submission times
# for each job in the workload.
#
# Copyright Â© 2018 Aaron Call <aaron.callo@bsc.es>

import sys
import logging
import argparse
import json
import copy
import math

import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

logging.basicConfig(format="%(message)s", level=logging.ERROR)

ap = argparse.ArgumentParser()
#ap.add_argument("-l", "--layout", dest="l", required=True,
#                help="Layout ile (json format)")
ap.add_argument("-s", "--schedule", dest="s", required=True,
                help="JSON schedule file")
args = ap.parse_args()

with open(args.s) as s:
    schedule = json.load(s)

lastTime = schedule[-1]["scheduled"]

resources = []
labels = []
completions = {}
resourcesUsed = 0
parsedSched = {}
racks = {}
for i in schedule:
    parsedSched[i["scheduled"]] = i
 
for i in range(0, lastTime+1):
    if i in completions:
	for volume in completions[i]["volumes"]:
                racks[completions[i]["rackid"]][volume] -= 1
		if racks[completions[i]["rackid"]][volume] == 0:
			resourcesUsed-=1
			del racks[completions[i]["rackid"]][volume]

    if i in parsedSched:
	completions[parsedSched[i]["completion"]] = parsedSched[i]
	for volume in parsedSched[i]["volumes"]:
		if parsedSched[i]["rackid"] not in racks:
			racks[parsedSched[i]["rackid"]] = {}

		if volume not in racks[parsedSched[i]["rackid"]]:
			racks[parsedSched[i]["rackid"]][volume] = 1
			resourcesUsed+=1
		else:
			racks[parsedSched[i]["rackid"]][volume]+=1

	labels.extend([i])
	resources.extend([resourcesUsed])

plt.xlabel("New job scheduled (step)")
plt.title("Volumes used by time of scheduling new jobs")
plt.xticks(labels,rotation=45)
p1 = plt.bar(labels, resources, width=50)
plt.yticks(np.arange(10))
plt.ylabel("Resources used")
plt.tight_layout()
plt.savefig('plot.pdf', bbox_inches='tight')

